[20140928 16:55:45-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:55:45-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:55:47-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:55:47-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:55:47-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:55:47-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:55:47-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:55:47-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:55:49-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:55:49-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:55:49-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:55:49-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:55:49-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:55:49-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:55:52-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:55:52-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:55:52-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:55:52-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:55:52-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:55:52-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:55:56-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:55:56-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:55:56-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:55:56-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:55:56-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:55:56-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:55:59-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:55:59-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:55:59-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:55:59-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:55:59-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:55:59-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:01-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:01-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:01-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:01-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:01-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:02-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:04-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:04-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:04-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:04-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:04-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:04-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:06-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:06-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:06-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:06-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:06-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:06-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:08-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:08-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:08-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:08-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:08-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:08-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:10-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:10-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:10-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:10-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:10-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:10-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:12-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:12-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:12-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:12-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:12-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:12-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:14-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:14-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:14-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:14-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:14-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:15-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:17-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:17-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:17-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:17-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:17-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:17-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:19-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:19-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:19-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:19-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:19-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:20-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:22-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:22-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:22-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:22-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:22-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:23-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:25-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:25-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:25-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:25-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:25-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:25-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:27-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:27-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:27-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:27-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:27-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:27-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:30-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:30-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:30-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:30-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:30-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:30-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:32-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:32-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:32-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:32-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:32-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:32-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:34-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:34-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:34-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:34-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:34-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:34-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:36-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:36-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:36-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:36-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:36-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:36-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:38-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:38-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:38-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:38-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:38-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:38-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:39-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:39-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:39-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:39-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:39-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:39-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:41-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:41-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:41-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:41-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:41-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:41-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:46-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:46-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:46-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:46-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:46-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:46-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:49-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:49-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:49-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:49-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:49-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:49-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:52-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:52-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:52-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:52-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:52-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:52-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:56:57-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:56:57-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:56:57-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:56:57-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:56:57-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:56:57-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:57:03-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:57:03-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:57:03-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:57:03-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:57:03-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:57:04-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:57:07-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:57:07-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:57:07-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:57:07-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:57:07-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:57:07-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 16:57:09-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 16:57:09-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 16:57:09-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 16:57:09-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 16:57:10-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 16:57:10-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411894448337
[20140928 18:38:41-INFO][ConfigParser.java:32][main]-- Begin to load system configuration:src/main/resources/config.xml
[20140928 18:38:41-INFO][Main.java:43][main]-- Begin to parser the datasources configuration file:d:\\config\conf_template.xml
[20140928 18:38:41-INFO][DataFetcherDispenser.java:160][main]-- Use class com.missionsky.scp.dataadapter.datafetcher.JSONDataFetcher to fetching data of the datasource Fire
[20140928 18:38:41-INFO][DataFetcherDispenser.java:165][main]-- Create a timer task thread for datasource Fire in threadpool.
[20140928 18:38:54-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 18:38:54-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 18:38:54-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 18:38:54-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 18:38:55-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 18:38:55-ERROR][HadoopFileUtil.java:113][pool-1-thread-1]-- Permission denied: user=Administrator, access=WRITE, inode="/":hadoop:supergroup:drwxr-xr-x
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkFsPermission(FSPermissionChecker.java:271)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:257)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:238)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:179)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5904)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5886)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkAncestorAccess(FSNamesystem.java:5860)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.mkdirsInternal(FSNamesystem.java:3793)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.mkdirsInt(FSNamesystem.java:3763)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.mkdirs(FSNamesystem.java:3737)
	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.mkdirs(NameNodeRpcServer.java:778)
	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.mkdirs(ClientNamenodeProtocolServerSideTranslatorPB.java:573)
	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:585)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:928)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2013)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2009)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1614)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2007)

[20140928 18:38:55-INFO][DataFilterApi.java:120][pool-1-thread-1]-- create file fire_1411900734548 and write data
[20140928 18:38:55-ERROR][HadoopFileUtil.java:47][pool-1-thread-1]-- Permission denied: user=Administrator, access=WRITE, inode="/":hadoop:supergroup:drwxr-xr-x
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkFsPermission(FSPermissionChecker.java:271)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:257)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:238)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:179)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5904)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5886)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkAncestorAccess(FSNamesystem.java:5860)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFileInternal(FSNamesystem.java:2362)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFileInt(FSNamesystem.java:2315)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFile(FSNamesystem.java:2266)
	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.create(NameNodeRpcServer.java:542)
	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.create(ClientNamenodeProtocolServerSideTranslatorPB.java:369)
	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:585)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:928)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2013)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2009)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1614)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2007)

[20140928 18:38:56-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 18:38:56-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 18:38:56-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 18:38:56-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 18:38:56-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 18:38:57-ERROR][HadoopFileUtil.java:113][pool-1-thread-1]-- Permission denied: user=Administrator, access=WRITE, inode="/":hadoop:supergroup:drwxr-xr-x
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkFsPermission(FSPermissionChecker.java:271)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:257)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:238)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:179)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5904)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5886)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkAncestorAccess(FSNamesystem.java:5860)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.mkdirsInternal(FSNamesystem.java:3793)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.mkdirsInt(FSNamesystem.java:3763)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.mkdirs(FSNamesystem.java:3737)
	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.mkdirs(NameNodeRpcServer.java:778)
	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.mkdirs(ClientNamenodeProtocolServerSideTranslatorPB.java:573)
	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:585)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:928)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2013)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2009)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1614)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2007)

[20140928 18:38:57-INFO][DataFilterApi.java:120][pool-1-thread-1]-- create file fire_1411900736973 and write data
[20140928 18:38:57-ERROR][HadoopFileUtil.java:47][pool-1-thread-1]-- Permission denied: user=Administrator, access=WRITE, inode="/":hadoop:supergroup:drwxr-xr-x
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkFsPermission(FSPermissionChecker.java:271)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:257)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:238)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:179)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5904)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5886)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkAncestorAccess(FSNamesystem.java:5860)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFileInternal(FSNamesystem.java:2362)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFileInt(FSNamesystem.java:2315)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFile(FSNamesystem.java:2266)
	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.create(NameNodeRpcServer.java:542)
	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.create(ClientNamenodeProtocolServerSideTranslatorPB.java:369)
	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:585)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:928)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2013)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2009)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1614)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2007)

[20140928 18:43:00-INFO][ConfigParser.java:32][main]-- Begin to load system configuration:src/main/resources/config.xml
[20140928 18:43:00-INFO][Main.java:43][main]-- Begin to parser the datasources configuration file:d:\\config\conf_template.xml
[20140928 18:43:00-INFO][DataFetcherDispenser.java:160][main]-- Use class com.missionsky.scp.dataadapter.datafetcher.JSONDataFetcher to fetching data of the datasource Fire
[20140928 18:43:00-INFO][DataFetcherDispenser.java:165][main]-- Create a timer task thread for datasource Fire in threadpool.
[20140928 18:43:04-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 18:43:04-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 18:43:04-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 18:43:04-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 18:43:05-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 18:43:05-ERROR][HadoopFileUtil.java:113][pool-1-thread-1]-- Permission denied: user=Administrator, access=WRITE, inode="/":hadoop:supergroup:drwxr-xr-x
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkFsPermission(FSPermissionChecker.java:271)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:257)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:238)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:179)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5904)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5886)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkAncestorAccess(FSNamesystem.java:5860)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.mkdirsInternal(FSNamesystem.java:3793)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.mkdirsInt(FSNamesystem.java:3763)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.mkdirs(FSNamesystem.java:3737)
	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.mkdirs(NameNodeRpcServer.java:778)
	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.mkdirs(ClientNamenodeProtocolServerSideTranslatorPB.java:573)
	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:585)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:928)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2013)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2009)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1614)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2007)

[20140928 18:43:05-INFO][DataFilterApi.java:120][pool-1-thread-1]-- create file fire_1411900984949 and write data
[20140928 18:43:05-ERROR][HadoopFileUtil.java:47][pool-1-thread-1]-- Permission denied: user=Administrator, access=WRITE, inode="/":hadoop:supergroup:drwxr-xr-x
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkFsPermission(FSPermissionChecker.java:271)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:257)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:238)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:179)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5904)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5886)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkAncestorAccess(FSNamesystem.java:5860)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFileInternal(FSNamesystem.java:2362)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFileInt(FSNamesystem.java:2315)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFile(FSNamesystem.java:2266)
	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.create(NameNodeRpcServer.java:542)
	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.create(ClientNamenodeProtocolServerSideTranslatorPB.java:369)
	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:585)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:928)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2013)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2009)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1614)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2007)

[20140928 18:43:08-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 18:43:08-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 18:43:08-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 18:43:08-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 18:43:08-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 18:43:08-ERROR][HadoopFileUtil.java:113][pool-1-thread-1]-- Permission denied: user=Administrator, access=WRITE, inode="/":hadoop:supergroup:drwxr-xr-x
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkFsPermission(FSPermissionChecker.java:271)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:257)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:238)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:179)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5904)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5886)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkAncestorAccess(FSNamesystem.java:5860)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.mkdirsInternal(FSNamesystem.java:3793)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.mkdirsInt(FSNamesystem.java:3763)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.mkdirs(FSNamesystem.java:3737)
	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.mkdirs(NameNodeRpcServer.java:778)
	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.mkdirs(ClientNamenodeProtocolServerSideTranslatorPB.java:573)
	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:585)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:928)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2013)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2009)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1614)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2007)

[20140928 18:43:08-INFO][DataFilterApi.java:120][pool-1-thread-1]-- create file fire_1411900988061 and write data
[20140928 18:43:08-ERROR][HadoopFileUtil.java:47][pool-1-thread-1]-- Permission denied: user=Administrator, access=WRITE, inode="/":hadoop:supergroup:drwxr-xr-x
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkFsPermission(FSPermissionChecker.java:271)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:257)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:238)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:179)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5904)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5886)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkAncestorAccess(FSNamesystem.java:5860)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFileInternal(FSNamesystem.java:2362)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFileInt(FSNamesystem.java:2315)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFile(FSNamesystem.java:2266)
	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.create(NameNodeRpcServer.java:542)
	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.create(ClientNamenodeProtocolServerSideTranslatorPB.java:369)
	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:585)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:928)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2013)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2009)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1614)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2007)

[20140928 18:46:27-INFO][ConfigParser.java:32][main]-- Begin to load system configuration:src/main/resources/config.xml
[20140928 18:46:28-INFO][Main.java:43][main]-- Begin to parser the datasources configuration file:d:\\config\conf_template.xml
[20140928 18:46:28-INFO][DataFetcherDispenser.java:160][main]-- Use class com.missionsky.scp.dataadapter.datafetcher.JSONDataFetcher to fetching data of the datasource Fire
[20140928 18:46:28-INFO][DataFetcherDispenser.java:165][main]-- Create a timer task thread for datasource Fire in threadpool.
[20140928 18:46:35-ERROR][JSONDataFetcher.java:105][pool-1-thread-1]-- Can not get the input stream of the URL http://www.civicdata.com/api/action/datastore_search?resource_id=ed0d4651-dbc3-48a6-b1df-17676f6e30f8&offset=0:java.net.UnknownHostException: www.civicdata.com
[20140928 18:46:35-ERROR][JSONDataFetcher.java:124][pool-1-thread-1]-- Can not convert string into JSONNode:java.io.EOFException: No content to map to Object due to end of input
[20140928 18:46:41-INFO][ConfigParser.java:32][main]-- Begin to load system configuration:src/main/resources/config.xml
[20140928 18:46:41-INFO][Main.java:43][main]-- Begin to parser the datasources configuration file:d:\\config\conf_template.xml
[20140928 18:46:41-INFO][DataFetcherDispenser.java:160][main]-- Use class com.missionsky.scp.dataadapter.datafetcher.JSONDataFetcher to fetching data of the datasource Fire
[20140928 18:46:41-INFO][DataFetcherDispenser.java:165][main]-- Create a timer task thread for datasource Fire in threadpool.
[20140928 18:46:55-ERROR][JSONDataFetcher.java:105][pool-1-thread-1]-- Can not get the input stream of the URL http://www.civicdata.com/api/action/datastore_search?resource_id=ed0d4651-dbc3-48a6-b1df-17676f6e30f8&offset=0:java.net.UnknownHostException: www.civicdata.com
[20140928 18:46:55-ERROR][JSONDataFetcher.java:124][pool-1-thread-1]-- Can not convert string into JSONNode:java.io.EOFException: No content to map to Object due to end of input
[20140928 18:47:11-INFO][ConfigParser.java:32][main]-- Begin to load system configuration:src/main/resources/config.xml
[20140928 18:47:11-INFO][Main.java:43][main]-- Begin to parser the datasources configuration file:d:\\config\conf_template.xml
[20140928 18:47:11-INFO][DataFetcherDispenser.java:160][main]-- Use class com.missionsky.scp.dataadapter.datafetcher.JSONDataFetcher to fetching data of the datasource Fire
[20140928 18:47:11-INFO][DataFetcherDispenser.java:165][main]-- Create a timer task thread for datasource Fire in threadpool.
[20140928 18:47:16-ERROR][JSONDataFetcher.java:105][pool-1-thread-1]-- Can not get the input stream of the URL http://www.civicdata.com/api/action/datastore_search?resource_id=ed0d4651-dbc3-48a6-b1df-17676f6e30f8&offset=0:java.net.UnknownHostException: www.civicdata.com
[20140928 18:47:16-ERROR][JSONDataFetcher.java:124][pool-1-thread-1]-- Can not convert string into JSONNode:java.io.EOFException: No content to map to Object due to end of input
[20140928 18:47:28-INFO][ConfigParser.java:32][main]-- Begin to load system configuration:src/main/resources/config.xml
[20140928 18:47:29-INFO][Main.java:43][main]-- Begin to parser the datasources configuration file:d:\\config\conf_template.xml
[20140928 18:47:29-INFO][DataFetcherDispenser.java:160][main]-- Use class com.missionsky.scp.dataadapter.datafetcher.JSONDataFetcher to fetching data of the datasource Fire
[20140928 18:47:29-INFO][DataFetcherDispenser.java:165][main]-- Create a timer task thread for datasource Fire in threadpool.
[20140928 18:47:33-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 18:47:33-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 18:47:33-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 18:47:33-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 18:47:34-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 18:47:34-ERROR][HadoopFileUtil.java:113][pool-1-thread-1]-- Permission denied: user=Administrator, access=WRITE, inode="/":hadoop:supergroup:drwxr-xr-x
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkFsPermission(FSPermissionChecker.java:271)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:257)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:238)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:179)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5904)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5886)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkAncestorAccess(FSNamesystem.java:5860)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.mkdirsInternal(FSNamesystem.java:3793)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.mkdirsInt(FSNamesystem.java:3763)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.mkdirs(FSNamesystem.java:3737)
	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.mkdirs(NameNodeRpcServer.java:778)
	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.mkdirs(ClientNamenodeProtocolServerSideTranslatorPB.java:573)
	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:585)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:928)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2013)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2009)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1614)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2007)

[20140928 18:47:34-INFO][DataFilterApi.java:120][pool-1-thread-1]-- create file fire_1411901253529 and write data
[20140928 18:47:34-ERROR][HadoopFileUtil.java:47][pool-1-thread-1]-- Permission denied: user=Administrator, access=WRITE, inode="/":hadoop:supergroup:drwxr-xr-x
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkFsPermission(FSPermissionChecker.java:271)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:257)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:238)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:179)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5904)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5886)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkAncestorAccess(FSNamesystem.java:5860)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFileInternal(FSNamesystem.java:2362)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFileInt(FSNamesystem.java:2315)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFile(FSNamesystem.java:2266)
	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.create(NameNodeRpcServer.java:542)
	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.create(ClientNamenodeProtocolServerSideTranslatorPB.java:369)
	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:585)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:928)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2013)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2009)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1614)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2007)

[20140928 18:47:37-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 18:47:37-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 18:47:37-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 18:47:37-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 18:47:37-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 18:47:37-ERROR][HadoopFileUtil.java:113][pool-1-thread-1]-- Permission denied: user=Administrator, access=WRITE, inode="/":hadoop:supergroup:drwxr-xr-x
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkFsPermission(FSPermissionChecker.java:271)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:257)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:238)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:179)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5904)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5886)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkAncestorAccess(FSNamesystem.java:5860)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.mkdirsInternal(FSNamesystem.java:3793)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.mkdirsInt(FSNamesystem.java:3763)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.mkdirs(FSNamesystem.java:3737)
	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.mkdirs(NameNodeRpcServer.java:778)
	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.mkdirs(ClientNamenodeProtocolServerSideTranslatorPB.java:573)
	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:585)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:928)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2013)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2009)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1614)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2007)

[20140928 18:47:37-INFO][DataFilterApi.java:120][pool-1-thread-1]-- create file fire_1411901257043 and write data
[20140928 18:47:37-ERROR][HadoopFileUtil.java:47][pool-1-thread-1]-- Permission denied: user=Administrator, access=WRITE, inode="/":hadoop:supergroup:drwxr-xr-x
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkFsPermission(FSPermissionChecker.java:271)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:257)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.check(FSPermissionChecker.java:238)
	at org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkPermission(FSPermissionChecker.java:179)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5904)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkPermission(FSNamesystem.java:5886)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkAncestorAccess(FSNamesystem.java:5860)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFileInternal(FSNamesystem.java:2362)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFileInt(FSNamesystem.java:2315)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFile(FSNamesystem.java:2266)
	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.create(NameNodeRpcServer.java:542)
	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.create(ClientNamenodeProtocolServerSideTranslatorPB.java:369)
	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:585)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:928)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2013)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2009)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1614)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2007)

[20140928 18:49:12-INFO][ConfigParser.java:32][main]-- Begin to load system configuration:src/main/resources/config.xml
[20140928 18:49:12-INFO][Main.java:43][main]-- Begin to parser the datasources configuration file:d:\\config\conf_template.xml
[20140928 18:49:12-INFO][DataFetcherDispenser.java:160][main]-- Use class com.missionsky.scp.dataadapter.datafetcher.JSONDataFetcher to fetching data of the datasource Fire
[20140928 18:49:12-INFO][DataFetcherDispenser.java:165][main]-- Create a timer task thread for datasource Fire in threadpool.
[20140928 18:49:16-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 18:49:16-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 18:49:16-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 18:49:16-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 18:49:17-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 18:49:17-INFO][DataFilterApi.java:120][pool-1-thread-1]-- create file fire_1411901356551 and write data
[20140928 18:49:18-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 18:49:18-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 18:49:18-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 18:49:18-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 18:49:18-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 18:49:18-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411901356551
[20140928 18:49:20-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 18:49:20-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 18:49:20-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 18:49:20-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 18:49:20-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 18:49:20-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411901356551
[20140928 18:49:22-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 18:49:22-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 18:49:22-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 18:49:22-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 18:49:22-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 18:49:22-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411901356551
[20140928 18:49:25-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 18:49:25-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 18:49:25-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 18:49:25-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 18:49:25-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 18:49:25-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411901356551
[20140928 18:49:28-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 18:49:28-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 18:49:28-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 18:49:28-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 18:49:28-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 18:49:28-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411901356551
[20140928 18:49:29-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 18:49:29-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 18:49:29-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 18:49:29-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 18:49:29-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 18:49:30-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411901356551
[20140928 18:49:31-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 18:49:31-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 18:49:31-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 18:49:31-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 18:49:31-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 18:49:31-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411901356551
[20140928 18:49:34-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 18:49:34-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 18:49:34-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 18:49:34-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 18:49:34-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 18:49:34-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411901356551
[20140928 18:49:37-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 18:49:37-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 18:49:37-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 18:49:37-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 18:49:37-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 18:49:37-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411901356551
[20140928 18:49:39-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 18:49:39-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 18:49:39-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 18:49:39-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 18:49:39-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 18:49:39-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411901356551
[20140928 18:49:42-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 18:49:42-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 18:49:42-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 18:49:42-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 18:49:42-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 18:49:42-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411901356551
[20140928 18:49:44-INFO][ExcuteFecthThread.java:86][pool-1-thread-1]-- Save data to hdfs.
[20140928 18:49:44-INFO][DataFilterApi.java:45][pool-1-thread-1]-- instanceof object types:Map or List,recommend to use List
[20140928 18:49:44-INFO][DataFilterApi.java:86][pool-1-thread-1]-- transfrom data to byte[]
[20140928 18:49:44-INFO][DataFilterApi.java:88][pool-1-thread-1]-- get file name from xml configuration
[20140928 18:49:44-INFO][DataFilterApi.java:110][pool-1-thread-1]-- Fire directory created.
[20140928 18:49:44-INFO][DataFilterApi.java:126][pool-1-thread-1]-- append data to exist file /Fire/fire_1411901356551
